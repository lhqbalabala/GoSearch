// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1-devel
// 	protoc        v3.20.1
// source: SearchService.proto

package models

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

//高亮
type Highlight struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PreTag  string `protobuf:"bytes,1,opt,name=preTag,proto3" json:"preTag,omitempty"`
	PostTag string `protobuf:"bytes,2,opt,name=postTag,proto3" json:"postTag,omitempty"`
}

func (x *Highlight) Reset() {
	*x = Highlight{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SearchService_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Highlight) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Highlight) ProtoMessage() {}

func (x *Highlight) ProtoReflect() protoreflect.Message {
	mi := &file_SearchService_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Highlight.ProtoReflect.Descriptor instead.
func (*Highlight) Descriptor() ([]byte, []int) {
	return file_SearchService_proto_rawDescGZIP(), []int{0}
}

func (x *Highlight) GetPreTag() string {
	if x != nil {
		return x.PreTag
	}
	return ""
}

func (x *Highlight) GetPostTag() string {
	if x != nil {
		return x.PostTag
	}
	return ""
}

type Docs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Favid uint32 `protobuf:"varint,1,opt,name=favid,proto3" json:"favid,omitempty"`
	Docid uint32 `protobuf:"varint,2,opt,name=docid,proto3" json:"docid,omitempty"`
}

func (x *Docs) Reset() {
	*x = Docs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SearchService_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Docs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Docs) ProtoMessage() {}

func (x *Docs) ProtoReflect() protoreflect.Message {
	mi := &file_SearchService_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Docs.ProtoReflect.Descriptor instead.
func (*Docs) Descriptor() ([]byte, []int) {
	return file_SearchService_proto_rawDescGZIP(), []int{1}
}

func (x *Docs) GetFavid() uint32 {
	if x != nil {
		return x.Favid
	}
	return 0
}

func (x *Docs) GetDocid() uint32 {
	if x != nil {
		return x.Docid
	}
	return 0
}

//搜索请求
type SearchRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Query      string           `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	Page       uint32           `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	Limit      uint32           `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	FilterWord []string         `protobuf:"bytes,4,rep,name=filterWord,proto3" json:"filterWord,omitempty"`
	Highlight  *Highlight       `protobuf:"bytes,5,opt,name=highlight,proto3" json:"highlight,omitempty"`
	Likes      map[uint32]*Docs `protobuf:"bytes,6,rep,name=likes,proto3" json:"likes,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` // 用户收藏
}

func (x *SearchRequest) Reset() {
	*x = SearchRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SearchService_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchRequest) ProtoMessage() {}

func (x *SearchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_SearchService_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchRequest.ProtoReflect.Descriptor instead.
func (*SearchRequest) Descriptor() ([]byte, []int) {
	return file_SearchService_proto_rawDescGZIP(), []int{2}
}

func (x *SearchRequest) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *SearchRequest) GetPage() uint32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *SearchRequest) GetLimit() uint32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *SearchRequest) GetFilterWord() []string {
	if x != nil {
		return x.FilterWord
	}
	return nil
}

func (x *SearchRequest) GetHighlight() *Highlight {
	if x != nil {
		return x.Highlight
	}
	return nil
}

func (x *SearchRequest) GetLikes() map[uint32]*Docs {
	if x != nil {
		return x.Likes
	}
	return nil
}

//搜索结果
type SearchResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Time      float32        `protobuf:"fixed32,1,opt,name=time,proto3" json:"time,omitempty"`          //查询用时
	Total     uint32         `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`         //总数
	PageCount uint32         `protobuf:"varint,3,opt,name=pageCount,proto3" json:"pageCount,omitempty"` //总页数
	Page      uint32         `protobuf:"varint,4,opt,name=page,proto3" json:"page,omitempty"`           //页码
	Limit     uint32         `protobuf:"varint,5,opt,name=limit,proto3" json:"limit,omitempty"`         //页大小
	Documents []*ResponseDoc `protobuf:"bytes,6,rep,name=documents,proto3" json:"documents,omitempty"`  //文档
	Related   []string       `protobuf:"bytes,7,rep,name=related,proto3" json:"related,omitempty"`      //相关搜索
	Words     []string       `protobuf:"bytes,8,rep,name=words,proto3" json:"words,omitempty"`          //搜索关键词
}

func (x *SearchResult) Reset() {
	*x = SearchResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SearchService_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchResult) ProtoMessage() {}

func (x *SearchResult) ProtoReflect() protoreflect.Message {
	mi := &file_SearchService_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchResult.ProtoReflect.Descriptor instead.
func (*SearchResult) Descriptor() ([]byte, []int) {
	return file_SearchService_proto_rawDescGZIP(), []int{3}
}

func (x *SearchResult) GetTime() float32 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *SearchResult) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *SearchResult) GetPageCount() uint32 {
	if x != nil {
		return x.PageCount
	}
	return 0
}

func (x *SearchResult) GetPage() uint32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *SearchResult) GetLimit() uint32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *SearchResult) GetDocuments() []*ResponseDoc {
	if x != nil {
		return x.Documents
	}
	return nil
}

func (x *SearchResult) GetRelated() []string {
	if x != nil {
		return x.Related
	}
	return nil
}

func (x *SearchResult) GetWords() []string {
	if x != nil {
		return x.Words
	}
	return nil
}

type IndexDoc struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Text string `protobuf:"bytes,2,opt,name=text,proto3" json:"text,omitempty"`
	Url  string `protobuf:"bytes,3,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *IndexDoc) Reset() {
	*x = IndexDoc{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SearchService_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IndexDoc) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IndexDoc) ProtoMessage() {}

func (x *IndexDoc) ProtoReflect() protoreflect.Message {
	mi := &file_SearchService_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IndexDoc.ProtoReflect.Descriptor instead.
func (*IndexDoc) Descriptor() ([]byte, []int) {
	return file_SearchService_proto_rawDescGZIP(), []int{4}
}

func (x *IndexDoc) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *IndexDoc) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *IndexDoc) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type ResponseDoc struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     uint32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Text   string  `protobuf:"bytes,2,opt,name=text,proto3" json:"text,omitempty"`
	Url    string  `protobuf:"bytes,3,opt,name=url,proto3" json:"url,omitempty"`
	Score  float32 `protobuf:"fixed32,4,opt,name=score,proto3" json:"score,omitempty"`  //得分
	Islike bool    `protobuf:"varint,5,opt,name=islike,proto3" json:"islike,omitempty"` //是否被收藏
	Docsid uint32  `protobuf:"varint,6,opt,name=docsid,proto3" json:"docsid,omitempty"` //收藏id
	Favid  uint32  `protobuf:"varint,7,opt,name=favid,proto3" json:"favid,omitempty"`   //收藏夹id
}

func (x *ResponseDoc) Reset() {
	*x = ResponseDoc{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SearchService_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseDoc) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseDoc) ProtoMessage() {}

func (x *ResponseDoc) ProtoReflect() protoreflect.Message {
	mi := &file_SearchService_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseDoc.ProtoReflect.Descriptor instead.
func (*ResponseDoc) Descriptor() ([]byte, []int) {
	return file_SearchService_proto_rawDescGZIP(), []int{5}
}

func (x *ResponseDoc) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ResponseDoc) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *ResponseDoc) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *ResponseDoc) GetScore() float32 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *ResponseDoc) GetIslike() bool {
	if x != nil {
		return x.Islike
	}
	return false
}

func (x *ResponseDoc) GetDocsid() uint32 {
	if x != nil {
		return x.Docsid
	}
	return 0
}

func (x *ResponseDoc) GetFavid() uint32 {
	if x != nil {
		return x.Favid
	}
	return 0
}

type DocRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DocRequest) Reset() {
	*x = DocRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SearchService_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DocRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DocRequest) ProtoMessage() {}

func (x *DocRequest) ProtoReflect() protoreflect.Message {
	mi := &file_SearchService_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DocRequest.ProtoReflect.Descriptor instead.
func (*DocRequest) Descriptor() ([]byte, []int) {
	return file_SearchService_proto_rawDescGZIP(), []int{6}
}

func (x *DocRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DocResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url  string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	Text string `protobuf:"bytes,2,opt,name=text,proto3" json:"text,omitempty"`
}

func (x *DocResult) Reset() {
	*x = DocResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SearchService_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DocResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DocResult) ProtoMessage() {}

func (x *DocResult) ProtoReflect() protoreflect.Message {
	mi := &file_SearchService_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DocResult.ProtoReflect.Descriptor instead.
func (*DocResult) Descriptor() ([]byte, []int) {
	return file_SearchService_proto_rawDescGZIP(), []int{7}
}

func (x *DocResult) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *DocResult) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

type SearchPictureResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Time      float32        `protobuf:"fixed32,1,opt,name=time,proto3" json:"time,omitempty"`          //查询用时
	Total     uint32         `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`         //总数
	PageCount uint32         `protobuf:"varint,3,opt,name=pageCount,proto3" json:"pageCount,omitempty"` //总页数
	Page      uint32         `protobuf:"varint,4,opt,name=page,proto3" json:"page,omitempty"`           //页码
	Limit     uint32         `protobuf:"varint,5,opt,name=limit,proto3" json:"limit,omitempty"`         //页大小
	Documents []*ResponseUrl `protobuf:"bytes,6,rep,name=documents,proto3" json:"documents,omitempty"`  //缩略图 Url
	Words     []string       `protobuf:"bytes,7,rep,name=words,proto3" json:"words,omitempty"`          //搜索关键词
}

func (x *SearchPictureResult) Reset() {
	*x = SearchPictureResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SearchService_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchPictureResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchPictureResult) ProtoMessage() {}

func (x *SearchPictureResult) ProtoReflect() protoreflect.Message {
	mi := &file_SearchService_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchPictureResult.ProtoReflect.Descriptor instead.
func (*SearchPictureResult) Descriptor() ([]byte, []int) {
	return file_SearchService_proto_rawDescGZIP(), []int{8}
}

func (x *SearchPictureResult) GetTime() float32 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *SearchPictureResult) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *SearchPictureResult) GetPageCount() uint32 {
	if x != nil {
		return x.PageCount
	}
	return 0
}

func (x *SearchPictureResult) GetPage() uint32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *SearchPictureResult) GetLimit() uint32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *SearchPictureResult) GetDocuments() []*ResponseUrl {
	if x != nil {
		return x.Documents
	}
	return nil
}

func (x *SearchPictureResult) GetWords() []string {
	if x != nil {
		return x.Words
	}
	return nil
}

type ResponseUrl struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ThumbnailUrl string  `protobuf:"bytes,1,opt,name=thumbnailUrl,proto3" json:"thumbnailUrl,omitempty"`
	Url          string  `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
	Id           uint32  `protobuf:"varint,3,opt,name=id,proto3" json:"id,omitempty"`
	Text         string  `protobuf:"bytes,4,opt,name=text,proto3" json:"text,omitempty"`
	Score        float32 `protobuf:"fixed32,5,opt,name=score,proto3" json:"score,omitempty"`
	Islike       bool    `protobuf:"varint,6,opt,name=islike,proto3" json:"islike,omitempty"` //是否被收藏
	Docsid       uint32  `protobuf:"varint,7,opt,name=docsid,proto3" json:"docsid,omitempty"` //收藏id
	Favid        uint32  `protobuf:"varint,8,opt,name=favid,proto3" json:"favid,omitempty"`   //收藏夹id
}

func (x *ResponseUrl) Reset() {
	*x = ResponseUrl{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SearchService_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseUrl) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseUrl) ProtoMessage() {}

func (x *ResponseUrl) ProtoReflect() protoreflect.Message {
	mi := &file_SearchService_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseUrl.ProtoReflect.Descriptor instead.
func (*ResponseUrl) Descriptor() ([]byte, []int) {
	return file_SearchService_proto_rawDescGZIP(), []int{9}
}

func (x *ResponseUrl) GetThumbnailUrl() string {
	if x != nil {
		return x.ThumbnailUrl
	}
	return ""
}

func (x *ResponseUrl) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *ResponseUrl) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ResponseUrl) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *ResponseUrl) GetScore() float32 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *ResponseUrl) GetIslike() bool {
	if x != nil {
		return x.Islike
	}
	return false
}

func (x *ResponseUrl) GetDocsid() uint32 {
	if x != nil {
		return x.Docsid
	}
	return 0
}

func (x *ResponseUrl) GetFavid() uint32 {
	if x != nil {
		return x.Favid
	}
	return 0
}

var File_SearchService_proto protoreflect.FileDescriptor

var file_SearchService_proto_rawDesc = []byte{
	0x0a, 0x13, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x22, 0x3d, 0x0a,
	0x09, 0x48, 0x69, 0x67, 0x68, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x72,
	0x65, 0x54, 0x61, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x72, 0x65, 0x54,
	0x61, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x6f, 0x73, 0x74, 0x54, 0x61, 0x67, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x6f, 0x73, 0x74, 0x54, 0x61, 0x67, 0x22, 0x32, 0x0a, 0x04,
	0x44, 0x6f, 0x63, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x61, 0x76, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x05, 0x66, 0x61, 0x76, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x64, 0x6f,
	0x63, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x64, 0x6f, 0x63, 0x69, 0x64,
	0x22, 0xa0, 0x02, 0x0a, 0x0d, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x57, 0x6f, 0x72, 0x64,
	0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x57, 0x6f,
	0x72, 0x64, 0x12, 0x2f, 0x0a, 0x09, 0x68, 0x69, 0x67, 0x68, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x48,
	0x69, 0x67, 0x68, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x52, 0x09, 0x68, 0x69, 0x67, 0x68, 0x6c, 0x69,
	0x67, 0x68, 0x74, 0x12, 0x36, 0x0a, 0x05, 0x6c, 0x69, 0x6b, 0x65, 0x73, 0x18, 0x06, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x53, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4c, 0x69, 0x6b, 0x65, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x6c, 0x69, 0x6b, 0x65, 0x73, 0x1a, 0x46, 0x0a, 0x0a, 0x4c,
	0x69, 0x6b, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x22, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x73, 0x2e, 0x44, 0x6f, 0x63, 0x73, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x22, 0xe3, 0x01, 0x0a, 0x0c, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x1c,
	0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x70, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x31, 0x0a, 0x09, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x6f, 0x63, 0x52, 0x09,
	0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x6c,
	0x61, 0x74, 0x65, 0x64, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x72, 0x65, 0x6c, 0x61,
	0x74, 0x65, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x08, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x05, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x22, 0x40, 0x0a, 0x08, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x44, 0x6f, 0x63, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x22, 0x9f, 0x01, 0x0a, 0x0b,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x6f, 0x63, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x65, 0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12,
	0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72,
	0x6c, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x73, 0x6c, 0x69, 0x6b,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x69, 0x73, 0x6c, 0x69, 0x6b, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x64, 0x6f, 0x63, 0x73, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x06, 0x64, 0x6f, 0x63, 0x73, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x61, 0x76, 0x69, 0x64,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x66, 0x61, 0x76, 0x69, 0x64, 0x22, 0x1c, 0x0a,
	0x0a, 0x44, 0x6f, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x22, 0x31, 0x0a, 0x09, 0x44,
	0x6f, 0x63, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65,
	0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x22, 0xd0,
	0x01, 0x0a, 0x13, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x50, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x12, 0x1c, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x70, 0x61,
	0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x31, 0x0a, 0x09, 0x64, 0x6f, 0x63, 0x75,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x55, 0x72, 0x6c,
	0x52, 0x09, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x77,
	0x6f, 0x72, 0x64, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x77, 0x6f, 0x72, 0x64,
	0x73, 0x22, 0xc3, 0x01, 0x0a, 0x0b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x55, 0x72,
	0x6c, 0x12, 0x22, 0x0a, 0x0c, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x55, 0x72,
	0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61,
	0x69, 0x6c, 0x55, 0x72, 0x6c, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x73,
	0x63, 0x6f, 0x72, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x72,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x73, 0x6c, 0x69, 0x6b, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x06, 0x69, 0x73, 0x6c, 0x69, 0x6b, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x6f, 0x63,
	0x73, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x64, 0x6f, 0x63, 0x73, 0x69,
	0x64, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x61, 0x76, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x05, 0x66, 0x61, 0x76, 0x69, 0x64, 0x32, 0xcb, 0x01, 0x0a, 0x06, 0x53, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x12, 0x3e, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x15, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x12, 0x4c, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x50,
	0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x15, 0x2e, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x53, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x50, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x12, 0x33, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x44, 0x6f, 0x63, 0x42, 0x79, 0x49, 0x64, 0x12, 0x12,
	0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x44, 0x6f, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x11, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x44, 0x6f, 0x63, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x42, 0x0e, 0x5a, 0x0c, 0x2e, 0x2e, 0x2f, 0x2e, 0x2e, 0x2f, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_SearchService_proto_rawDescOnce sync.Once
	file_SearchService_proto_rawDescData = file_SearchService_proto_rawDesc
)

func file_SearchService_proto_rawDescGZIP() []byte {
	file_SearchService_proto_rawDescOnce.Do(func() {
		file_SearchService_proto_rawDescData = protoimpl.X.CompressGZIP(file_SearchService_proto_rawDescData)
	})
	return file_SearchService_proto_rawDescData
}

var file_SearchService_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_SearchService_proto_goTypes = []interface{}{
	(*Highlight)(nil),           // 0: models.Highlight
	(*Docs)(nil),                // 1: models.Docs
	(*SearchRequest)(nil),       // 2: models.SearchRequest
	(*SearchResult)(nil),        // 3: models.SearchResult
	(*IndexDoc)(nil),            // 4: models.IndexDoc
	(*ResponseDoc)(nil),         // 5: models.ResponseDoc
	(*DocRequest)(nil),          // 6: models.DocRequest
	(*DocResult)(nil),           // 7: models.DocResult
	(*SearchPictureResult)(nil), // 8: models.SearchPictureResult
	(*ResponseUrl)(nil),         // 9: models.ResponseUrl
	nil,                         // 10: models.SearchRequest.LikesEntry
}
var file_SearchService_proto_depIdxs = []int32{
	0,  // 0: models.SearchRequest.highlight:type_name -> models.Highlight
	10, // 1: models.SearchRequest.likes:type_name -> models.SearchRequest.LikesEntry
	5,  // 2: models.SearchResult.documents:type_name -> models.ResponseDoc
	9,  // 3: models.SearchPictureResult.documents:type_name -> models.ResponseUrl
	1,  // 4: models.SearchRequest.LikesEntry.value:type_name -> models.Docs
	2,  // 5: models.Search.GetSearchResult:input_type -> models.SearchRequest
	2,  // 6: models.Search.GetSearchPictureResult:input_type -> models.SearchRequest
	6,  // 7: models.Search.GetDocById:input_type -> models.DocRequest
	3,  // 8: models.Search.GetSearchResult:output_type -> models.SearchResult
	8,  // 9: models.Search.GetSearchPictureResult:output_type -> models.SearchPictureResult
	7,  // 10: models.Search.GetDocById:output_type -> models.DocResult
	8,  // [8:11] is the sub-list for method output_type
	5,  // [5:8] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_SearchService_proto_init() }
func file_SearchService_proto_init() {
	if File_SearchService_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_SearchService_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Highlight); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SearchService_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Docs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SearchService_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SearchService_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SearchService_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IndexDoc); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SearchService_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseDoc); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SearchService_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DocRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SearchService_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DocResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SearchService_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchPictureResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SearchService_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseUrl); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_SearchService_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_SearchService_proto_goTypes,
		DependencyIndexes: file_SearchService_proto_depIdxs,
		MessageInfos:      file_SearchService_proto_msgTypes,
	}.Build()
	File_SearchService_proto = out.File
	file_SearchService_proto_rawDesc = nil
	file_SearchService_proto_goTypes = nil
	file_SearchService_proto_depIdxs = nil
}
